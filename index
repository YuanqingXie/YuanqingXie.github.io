<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Yuanqing Xie - Official Website</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="icon" href="assets/logo.svg" type="image/svg+xml">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Three.js and required components -->
    <script src="https://cdn.jsdelivr.net/npm/three@0.132.2/build/three.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.132.2/examples/js/loaders/GLTFLoader.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.132.2/examples/js/controls/OrbitControls.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.132.2/examples/js/loaders/DRACOLoader.js"></script>
    
    <style>
        :root {
            --primary: #555;
            --dark: #222;
            --gray: #777;
            --light-gray: #eee;
            --white: #fff;
            --black: #000;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Noto Sans', sans-serif;
        }
        
        body {
            background-color: var(--black);
            color: var(--white);
            overflow-x: hidden;
            line-height: 1.6;
        }
        
        /* Video Background */
        .hero-video {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            z-index: 0;
            opacity: 1;
        }
        
        .hero::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1;
        }
        
        /* Video Controls */
        .video-controls {
            position: absolute;
            bottom: 20px;
            right: 20px;
            display: flex;
            gap: 10px;
            z-index: 10;
        }
        
        .video-btn {
            background: rgba(0, 0, 0, 0.5);
            color: white;
            border: none;
            width: auto;
            padding: 0 15px;
            height: 40px;
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .video-btn:hover {
            background: rgba(0, 0, 0, 0.8);
            transform: scale(1.1);
        }
        
        /* Navigation Bar */
        .navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 5%;
            background: transparent;
            z-index: 1000;
        }
        
        .logo-container {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .logo {
            height: 30px;
            width: auto;
        }
        
        .site-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--white);
        }
        
        .nav-links {
            display: flex;
            gap: 20px;
            align-items: center;
        }
        
        .nav-links a {
            text-decoration: none;
            color: var(--white);
            font-weight: 500;
            font-size: 0.95rem;
            transition: color 0.3s;
        }
        
        .nav-links a:hover {
            color: var(--light-gray);
        }
        
        /* Language Toggle - Always visible */
        .language-toggle {
            position: relative;
            display: inline-block;
            margin-left: auto;
            margin-right: 15px;
        }
        
        .language-btn {
            background: none;
            border: none;
            color: var(--white);
            font-weight: 500;
            font-size: 0.95rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            padding: 5px 10px;
            border-radius: 4px;
            transition: all 0.3s;
        }
        
        .language-btn:hover {
            background: rgba(255,255,255,0.1);
        }
        
        .language-dropdown {
            position: absolute;
            top: 100%;
            left: 0;
            background: var(--black);
            border-radius: 4px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.3);
            display: none;
            flex-direction: column;
            min-width: 120px;
            z-index: 1001;
            border: 1px solid rgba(255,255,255,0.1);
        }
        
        .language-toggle:hover .language-dropdown,
        .language-toggle:focus-within .language-dropdown {
            display: flex;
        }
        
        .language-option {
            padding: 8px 12px;
            text-align: left;
            color: var(--white);
            text-decoration: none;
            transition: background 0.2s;
            cursor: pointer;
        }
        
        .language-option:hover {
            background: rgba(255,255,255,0.1);
        }
        
        .language-option.active {
            background: rgba(255,255,255,0.2);
            font-weight: 600;
        }
        
        /* Mobile Menu Button */
        .mobile-menu-btn {
            display: none;
            background: none;
            border: none;
            font-size: 1.5rem;
            color: var(--white);
            cursor: pointer;
            padding: 5px;
        }
        
        /* Mobile Menu */
        .mobile-menu {
            position: fixed;
            top: 70px;
            left: 0;
            width: 100%;
            background: var(--black);
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
            z-index: 999;
            display: none;
            flex-direction: column;
            gap: 15px;
            border-top: 1px solid rgba(255,255,255,0.1);
        }
        
        .mobile-menu.show {
            display: flex;
        }
        
        .mobile-menu a {
            padding: 10px;
            text-decoration: none;
            color: var(--white);
            font-weight: 500;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }
        
        /* Hero Section */
        .hero {
            height: 100vh;
            display: flex;
            align-items: center;
            position: relative;
            padding-top: 80px;
            background: #111;
        }
        
        .hero-content {
            position: relative;
            z-index: 2;
            display: flex;
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 5%;
            color: var(--white);
        }
        
        .hero-text {
            flex: 2;
        }
        
        .hero h1 {
            font-size: 3rem;
            margin-bottom: 25px;
            line-height: 1.2;
            font-weight: 600;
            display: none;
        }
        
        .hero h1.active {
            display: block;
        }
        
        /* Projects Section */
        .projects-section {
            padding: 100px 5px;
            background: var(--black);
        }
        
        .section-header {
            text-align: center;
            margin-bottom: 60px;
            padding: 0 5%;
        }
        
        .section-header h2 {
            font-size: 2.2rem;
            margin-bottom: 15px;
            color: var(--white);
            position: relative;
            display: inline-block;
            display: none;
        }
        
        .section-header h2.active {
            display: block;
        }
        
        .section-header p {
            display: none;
        }
        
        .section-header p.active {
            display: block;
        }
        
        /* Projects */
        .projects-container {
            max-width: 100%;
            margin: 0 auto;
        }
        
        .project-item {
            margin-bottom: 100px;
        }
        
        .project-image {
            width: calc(100% - 10px);
            height: 500px;
            position: relative;
            overflow: hidden;
            border-radius: 5px;
            margin: 0 5px;
        }
        
        .project-image:hover .project-info-overlay {
            opacity: 1;
        }
        
        .project-info-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.8);
            display: flex;
            flex-direction: column;
            justify-content: center;
            padding: 40px;
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: 2;
        }
        
        .project-info-overlay h3 {
            color: var(--white);
            font-size: 2rem;
            margin-bottom: 20px;
            display: none;
        }
        
        .project-info-overlay h3.active {
            display: block;
        }
        
        .project-info-overlay p {
            color: var(--gray);
            margin-bottom: 20px;
            line-height: 1.6;
            max-width: 800px;
            display: none;
        }
        
        .project-info-overlay p.active {
            display: block;
        }
        
        .project-info-overlay .tags {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 20px;
        }
        
        .project-info-overlay .tag {
            background: rgba(85,85,85,0.2);
            color: var(--white);
            padding: 5px 12px;
            border-radius: 4px;
            font-size: 0.85rem;
            font-weight: 500;
        }
        
        /* 3D Viewer Styles */
        .model-viewer-container {
            position: relative;
            width: calc(100% - 10px);
            height: 500px;
            background: #1a1a1a;
            border-radius: 5px;
            overflow: hidden;
            margin: 0 5px;
        }
        
        .model-viewer-container canvas {
            display: block;
            width: 100%;
            height: 100%;
        }
        
        .model-loading {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(26,26,26,0.8);
            z-index: 10;
            color: var(--white);
        }
        
        .model-error {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            text-align: center;
            padding: 20px;
            background: #1a1a1a;
            color: #ff5555;
        }
        
        .model-error button {
            margin-top: 15px;
            padding: 8px 16px;
            background: var(--primary);
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        /* About Section */
        .about-section {
            padding: 100px 5%;
            background: #4d4d4d;
            position: relative;
        }
        
        .about-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('assets/portrait.png');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            opacity: 1;
            z-index: 0;
        }
        
        .about-content {
            max-width: 1200px;
            margin: 0 auto;
            position: relative;
            z-index: 1;
        }
        
        .about-content h2 {
            font-size: 2.2rem;
            margin-bottom: 40px;
            color: var(--white);
            text-align: center;
            display: none;
        }
        
        .about-content h2.active {
            display: block;
        }
        
        .about-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 50px;
        }
        
        .about-text p {
            color: var(--white);
            margin-bottom: 20px;
            line-height: 1.8;
            text-align: left;
            display: none;
        }
        
        .about-text p.active {
            display: block;
        }
        
        .skills {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
        }
        
        .skill-item {
            background: rgba(26,26,26,0.8);
            padding: 25px;
            border-radius: 5px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.2);
            backdrop-filter: blur(5px);
        }
        
        .skill-item h4 {
            margin-bottom: 15px;
            color: var(--white);
            font-size: 1.1rem;
        }
        
        .skill-item p {
            display: none;
        }
        
        .skill-item p.active {
            display: block;
        }
        
        /* Contact Section */
        .contact-section {
            padding: 100px 5%;
            background: var(--black);
            text-align: center;
        }
        
        .contact-info {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 30px;
            max-width: 900px;
            margin: 50px auto;
        }
        
        .contact-card {
            background: #1a1a1a;
            padding: 30px;
            border-radius: 5px;
            width: 250px;
            transition: transform 0.3s ease;
        }
        
        .contact-card:hover {
            transform: translateY(-5px);
        }
        
        .contact-card i {
            font-size: 2.5rem;
            color: var(--primary);
            margin-bottom: 20px;
        }
        
        .contact-card h3 {
            margin-bottom: 10px;
            color: var(--white);
            display: none;
        }
        
        .contact-card h3.active {
            display: block;
        }
        
        .contact-card p {
            color: var(--gray);
            display: none;
        }
        
        .contact-card p.active {
            display: block;
        }
        
        /* Footer */
        footer {
            background: #111;
            color: var(--white);
            padding: 60px 5% 30px;
            text-align: center;
        }
        
        .footer-links {
            display: flex;
            justify-content: center;
            gap: 30px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }
        
        .footer-links a {
            color: rgba(255,255,255,0.8);
            text-decoration: none;
            transition: color 0.3s;
        }
        
        .footer-links a:hover {
            color: var(--primary);
        }
        
        .social-icons {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin: 30px 0;
        }
        
        .social-icons a {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 50px;
            background: rgba(255,255,255,0.1);
            border-radius: 50%;
            color: var(--white);
            font-size: 1.2rem;
            transition: all 0.3s;
        }
        
        .social-icons a:hover {
            background: var(--primary);
            color: var(--dark);
        }
        
        .copyright {
            margin-top: 30px;
            color: rgba(255,255,255,0.6);
            font-size: 0.9rem;
        }
        
        /* Language Transition Styles */
        .language-transition {
            transition: opacity 0.3s ease, transform 0.3s ease;
        }
        
        /* Responsive Design */
        @media (max-width: 1200px) {
            .hero h1 {
                font-size: 2.5rem;
            }
        }
        
        @media (max-width: 992px) {
            .about-grid {
                grid-template-columns: 1fr;
            }
            
            .skills {
                grid-template-columns: 1fr;
            }
        }
        
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }
            
            .language-toggle {
                display: flex !important;
                margin-right: 50px;
            }
            
            .mobile-menu-btn {
                display: block;
            }
            
            .hero {
                padding-top: 70px;
                height: auto;
                min-height: 100vh;
            }
            
            .hero h1 {
                font-size: 2rem;
            }
            
            .section-header h2 {
                font-size: 1.8rem;
            }
            
            .project-image,
            .model-viewer-container {
                height: 400px;
            }
        }
        
        @media (max-width: 576px) {
            .hero h1 {
                font-size: 1.8rem;
            }
            
            .btn {
                padding: 8px 20px;
                font-size: 0.9rem;
            }
            
            .contact-card {
                width: 100%;
            }
            
            .project-image,
            .model-viewer-container {
                height: 300px;
            }
            
            .project-info-overlay {
                padding: 20px;
            }
            
            .project-info-overlay h3 {
                font-size: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar">
        <div class="logo-container">
            <img src="assets/logo.svg" alt="Logo" class="logo">
            <div class="site-title">Yuanqing Xie</div>
        </div>
        
        <!-- Language toggle moved here -->
        <div class="language-toggle" id="language-toggle">
            <button class="language-btn">
                <i class="fas fa-globe"></i> EN
            </button>
            <div class="language-dropdown">
                <div class="language-option" data-lang="en">English</div>
                <div class="language-option" data-lang="de">Deutsch</div>
                <div class="language-option" data-lang="zh">中文</div>
            </div>
        </div>
        
        <div class="nav-links">
            <a href="#home" data-i18n="home">Home</a>
            <a href="#projects" data-i18n="projects">Projects</a>
            <a href="#about" data-i18n="about">About</a>
            <a href="#contact" data-i18n="contact">Contact</a>
        </div>
        
        <button class="mobile-menu-btn" id="mobile-menu-btn">
            <i class="fas fa-bars"></i>
        </button>
    </nav>
    
    <!-- Mobile Menu -->
    <div class="mobile-menu" id="mobile-menu">
        <a href="#home" data-i18n="home">Home</a>
        <a href="#projects" data-i18n="projects">Projects</a>
        <a href="#about" data-i18n="about">About</a>
        <a href="#contact" data-i18n="contact">Contact</a>
    </div>

    <!-- Hero Section with Video Background -->
    <section class="hero" id="home">
        <video autoplay muted loop playsinline class="hero-video" id="hero-video">
            <source src="assets/Hero_2048x1080.mp4" type="video/mp4">
            Your browser does not support the video tag.
        </video>
        <div class="video-controls">
            <button class="video-btn" id="quality-btn" title="Switch to 4K">
                2K
            </button>
            <button class="video-btn" id="mute-btn" title="Unmute">
                <i class="fas fa-volume-mute"></i>
            </button>
        </div>
        <div class="hero-content">
            <div class="hero-text">
                <h1 lang="en" class="active">Innovative Design · Technology Integration · User Experience</h1>
                <h1 lang="de">Innovatives Design · Technologieintegration · Benutzererlebnis</h1>
                <h1 lang="zh">创新设计 · 技术整合 · 用户体验</h1>
            </div>
        </div>
    </section>

    <!-- Projects Section -->
    <section class="projects-section" id="projects">
        <div class="projects-container">
            <!-- Project 1: SmartGestureBox with 3D Model -->
            <div class="project-item">
                <div class="project-image">
                    <div class="model-viewer-container" id="sgb-viewer-container">
                        <div class="model-loading">
                            <div>
                                <i class="fas fa-spinner fa-spin"></i>
                                <p data-i18n="loading_model">Loading 3D model...</p>
                            </div>
                        </div>
                    </div>
                    <div class="project-info-overlay">
                        <h3 lang="en" class="active">Smart Gesture Box</h3>
                        <h3 lang="de">Smart Gesture Box</h3>
                        <h3 lang="zh">智能手势控制盒</h3>
                        <p lang="en" class="active">
                            An innovative machine learning application that controls computer operations through gesture recognition. The system uses YOLO V5 algorithm for gesture recognition and tracking, supporting operations within a 4-meter range and effectively reducing repetitive muscle strain.
                        </p>
                        <p lang="de">
                            Eine innovative Machine-Learning-Anwendung, die Computeroperationen durch Gestenerkennung steuert. Das System verwendet den YOLO V5-Algorithmus zur Gestenerkennung und -verfolgung, unterstützt Operationen innerhalb eines 4-Meter-Bereichs und reduziert effektiv repetitive Muskelbelastungen.
                        </p>
                        <p lang="zh">
                            一款通过手势识别控制计算机操作的创新机器学习应用。该系统使用YOLO V5算法进行手势识别和跟踪，支持4米范围内的操作，有效减少重复性肌肉劳损。
                        </p>
                        <div class="tags">
                            <span class="tag">Machine Learning</span>
                            <span class="tag">Human-Computer Interaction</span>
                            <span class="tag">Python</span>
                            <span class="tag">YOLO V5</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Project 2: Concept Tractor & Trailer -->
            <div class="project-item">
                <div class="project-image">
                    <div class="model-viewer-container" id="tractor-viewer-container">
                        <div class="model-loading">
                            <div>
                                <i class="fas fa-spinner fa-spin"></i>
                                <p data-i18n="loading_model">Loading 3D model...</p>
                            </div>
                        </div>
                    </div>
                    <div class="project-info-overlay">
                        <h3 lang="en" class="active">Concept Tractor & Trailer Design</h3>
                        <h3 lang="de">Konzept Traktor & Anhänger Design</h3>
                        <h3 lang="zh">概念拖拉机与拖车设计</h3>
                        <p lang="en" class="active">
                            A conceptual tractor and autonomous trailer system designed to address labor shortages and environmental challenges caused by China's rapid urbanization and aging population. Integrates GPS navigation, autonomous driving and multifunctional operation capabilities.
                        </p>
                        <p lang="de">
                            Ein konzeptionelles Traktor- und autonomes Anhängersystem, das entwickelt wurde, um Arbeitskräftemangel und Umweltprobleme zu bewältigen, die durch Chinas schnelle Urbanisierung und alternde Bevölkerung verursacht werden. Integriert GPS-Navigation, autonomes Fahren und multifunktionale Betriebsfähigkeiten.
                        </p>
                        <p lang="zh">
                            为解决中国快速城市化和人口老龄化导致的劳动力短缺和环境挑战而设计的概念拖拉机与自主拖车系统。集成了GPS导航、自动驾驶和多功能操作能力。
                        </p>
                        <div class="tags">
                            <span class="tag">Transportation Design</span>
                            <span class="tag">Sustainability</span>
                            <span class="tag">GPS Navigation</span>
                            <span class="tag">Automation</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Project 3: Beckhoff Design -->
            <div class="project-item">
                <div class="project-image">
                    <img src="https://via.placeholder.com/800x500" alt="Beckhoff Design">
                    <div class="project-info-overlay">
                        <h3 lang="en" class="active">Beckhoff Automation Solutions</h3>
                        <h3 lang="de">Beckhoff Automatisierungslösungen</h3>
                        <h3 lang="zh">Beckhoff自动化解决方案</h3>
                        <p lang="en" class="active">
                            Industrial automation product series designed for Beckhoff Automation, including ultra-compact industrial PC C6030, modular automation system MX-System, etc. The project covered product design, 3D rendering and animation presentation.
                        </p>
                        <p lang="de">
                            Industrielle Automatisierungsproduktserie für Beckhoff Automation, inklusive ultra-kompakter Industrie-PC C6030, modulares Automatisierungssystem MX-System usw. Das Projekt umfasste Produktdesign, 3D-Rendering und Animationspräsentation.
                        </p>
                        <p lang="zh">
                            为Beckhoff Automation设计的工业自动化产品系列，包括超紧凑型工业PC C6030、模块化自动化系统MX-System等。项目涵盖产品设计、3D渲染和动画展示。
                        </p>
                        <div class="tags">
                            <span class="tag">Industrial Design</span>
                            <span class="tag">3D Rendering</span>
                            <span class="tag">Animation Design</span>
                            <span class="tag">Product Design</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- About Section -->
    <section class="about-section" id="about">
        <div class="about-content">
            <h2 lang="en" class="active">About Me</h2>
            <h2 lang="de">Über mich</h2>
            <h2 lang="zh">关于我</h2>
            
            <div class="about-grid">
                <div class="about-text">
                    <p lang="en" class="active">
                        I am Yuanqing Xie, a multidisciplinary designer combining industrial design, UI/UX, 3D real-time rendering and AI technologies. I focus on creating solutions that blend aesthetics and functionality, connecting people with technology through design.
                    </p>
                    <p lang="de">
                        Ich bin Yuanqing Xie, ein multidisziplinärer Designer, der Industriedesign, UI/UX, 3D-Echtzeit-Rendering und KI-Technologien kombiniert. Ich konzentriere mich auf die Erstellung von Lösungen, die Ästhetik und Funktionalität verbinden und Menschen durch Design mit Technologie verbinden.
                    </p>
                    <p lang="zh">
                        我是谢原卿，一位结合工业设计、UI/UX、3D实时渲染和AI技术的多学科设计师。我专注于创造融合美学与功能的解决方案，通过设计连接人与技术。
                    </p>
                    
                    <p lang="en" class="active">
                        Industrial designer focused on perfectly blending technological innovation with user experience. Holds a Master's degree in Industrial Design from the University of Kassel, Germany and a Bachelor's degree in Industrial Design from Sichuan Fine Arts Institute, China.
                    </p>
                    <p lang="de">
                        Industriedesigner, der sich darauf konzentriert, technologische Innovation und Benutzererfahrung perfekt zu verbinden. Absolvent eines Master-Abschlusses in Industriedesign von der Universität Kassel, Deutschland, und eines Bachelor-Abschlusses in Industriedesign vom Sichuan Fine Arts Institute, China.
                    </p>
                    <p lang="zh">
                        专注于将技术创新与用户体验完美融合的工业设计师。拥有德国卡塞尔大学工业设计硕士学位和中国四川美术学院工业设计学士学位。
                    </p>
                    
                    <p lang="en" class="active">
                        As an industrial designer at Beckhoff Automation, responsible for product rendering, animation and industrial design solutions, focusing on automation technology product design. Participated in several international collaboration projects, including the development of a workbench system with Festool.
                    </p>
                    <p lang="de">
                        Als Industriedesigner bei Beckhoff Automation verantwortlich für Produkt-Rendering, Animation und Industriedesign-Lösungen mit Schwerpunkt auf Automatisierungstechnik-Produktdesign. Beteiligt an mehreren internationalen Kooperationsprojekten, einschließlich der Entwicklung eines Arbeitssystem mit Festool.
                    </p>
                    <p lang="zh">
                        作为Beckhoff Automation的工业设计师，负责产品渲染、动画和工业设计解决方案，专注于自动化技术产品设计。参与了多个国际合作项目，包括与Festool合作开发工作台系统。
                    </p>
                    
                    <p lang="en" class="active">
                        My design philosophy is to create products that are both beautiful and practical, solving real problems through innovative human-computer interaction while paying attention to sustainability and social impact. Skilled in combining traditional design methods with emerging technologies such as 3D real-time rendering and AI-generated content.
                    </p>
                    <p lang="de">
                        Meine Designphilosophie ist es, Produkte zu schaffen, die sowohl schön als auch praktisch sind, reale Probleme durch innovative Mensch-Computer-Interaktion lösen und dabei Nachhaltigkeit und soziale Auswirkungen berücksichtigen. Erfahren in der Kombination traditioneller Designmethoden mit neuen Technologien wie 3D-Echtzeit-Rendering und KI-generierten Inhalten.
                    </p>
                    <p lang="zh">
                        我的设计理念是创造既美观又实用的产品，通过创新的人机交互解决实际问题，同时关注可持续性和社会影响。擅长将传统设计方法与3D实时渲染和AI生成内容等新兴技术相结合。
                    </p>
                </div>
                
                <div class="skills">
                    <div class="skill-item">
                        <h4>
                            <span lang="en" class="active">Design Expertise</span>
                            <span lang="de">Design-Expertise</span>
                            <span lang="zh">设计专长</span>
                        </h4>
                        <p lang="en" class="active">Industrial Design · 3D Real-time Rendering · 3D Animation · Graphic Design · AI Technology · Video Creation · UI/UX Design · Web Design</p>
                        <p lang="de">Industriedesign · 3D-Echtzeit-Rendering · 3D-Animation · Grafikdesign · KI-Technologie · Videoproduktion · UI/UX-Design · Webdesign</p>
                        <p lang="zh">工业设计 · 3D实时渲染 · 3D动画 · 平面设计 · AI技术 · 视频创作 · UI/UX设计 · 网页设计</p>
                    </div>
                    <div class="skill-item">
                        <h4>
                            <span lang="en" class="active">AI Technologies</span>
                            <span lang="de">KI-Technologien</span>
                            <span lang="zh">AI技术</span>
                        </h4>
                        <p lang="en" class="active">AI Video Generation · Machine Learning Applications · Computer Vision · Gesture Recognition</p>
                        <p lang="de">KI-Videogenerierung · Machine-Learning-Anwendungen · Computer Vision · Gestenerkennung</p>
                        <p lang="zh">AI视频生成 · 机器学习应用 · 计算机视觉 · 手势识别</p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Contact Section -->
    <section class="contact-section" id="contact">
        <div class="section-header">
            <h2 lang="en" class="active">Contact</h2>
            <h2 lang="de">Kontakt</h2>
            <h2 lang="zh">联系</h2>
            <p lang="en" class="active">
                Interested in my work? Feel free to contact me to discuss potential collaboration opportunities
            </p>
            <p lang="de">
                Interessiert an meiner Arbeit? Kontaktieren Sie mich gerne, um mögliche Kooperationsmöglichkeiten zu besprechen
            </p>
            <p lang="zh">
                对我的作品感兴趣？欢迎联系我讨论潜在的合作机会
            </p>
        </div>
        
        <div class="contact-info">
            <div class="contact-card">
                <i class="fas fa-envelope"></i>
                <h3 lang="en" class="active">Email</h3>
                <h3 lang="de">E-Mail</h3>
                <h3 lang="zh">邮箱</h3>
                <p>xieyuantsing@gmail.com</p>
            </div>
            <div class="contact-card">
                <i class="fas fa-phone"></i>
                <h3 lang="en" class="active">Phone</h3>
                <h3 lang="de">Telefon</h3>
                <h3 lang="zh">电话</h3>
                <p>+49 015257 634933</p>
            </div>
            <div class="contact-card">
                <i class="fas fa-map-marker-alt"></i>
                <h3 lang="en" class="active">Location</h3>
                <h3 lang="de">Standort</h3>
                <h3 lang="zh">位置</h3>
                <p lang="en" class="active">Germany · Verl</p>
                <p lang="de">Deutschland · Verl</p>
                <p lang="zh">德国 · 费尔</p>
            </div>
        </div>
        
        <a href="mailto:xieyuantsing@gmail.com" class="btn btn-primary">
            <i class="fas fa-paper-plane"></i> 
            <span lang="en" class="active">Send Email</span>
            <span lang="de">Email senden</span>
            <span lang="zh">发送邮件</span>
        </a>
    </section>

    <!-- Footer -->
    <footer>
        <div class="footer-links">
            <a href="#home" data-i18n="home">Home</a>
            <a href="#projects" data-i18n="projects">Projects</a>
            <a href="#about" data-i18n="about">About</a>
            <a href="#contact" data-i18n="contact">Contact</a>
            <a href="#" data-i18n="privacy">Privacy Policy</a>
        </div>
        
        <div class="social-icons">
            <a href="#"><i class="fab fa-linkedin-in"></i></a>
            <a href="#"><i class="fab fa-behance"></i></a>
            <a href="#"><i class="fab fa-dribbble"></i></a>
            <a href="#"><i class="fab fa-instagram"></i></a>
        </div>
        
        <p class="copyright" data-i18n="copyright">
            © 2023 谢原卿. All rights reserved.
        </p>
    </footer>

    <script>
        // 翻译字典
        const translations = {
            en: {
                "home": "Home",
                "projects": "Projects",
                "about": "About",
                "contact": "Contact",
                "privacy": "Privacy Policy",
                "send_email": "Send Email",
                "copyright": "© 2023 Yuanqing Xie. All rights reserved.",
                "loading_model": "Loading 3D model...",
                "model_error": "Failed to load 3D model",
                "try_again": "Try Again",
                "about_me": "About Me",
                "email": "Email",
                "phone": "Phone",
                "location": "Location"
            },
            de: {
                "home": "Startseite",
                "projects": "Projekte",
                "about": "Über mich",
                "contact": "Kontakt",
                "privacy": "Datenschutz",
                "send_email": "Email senden",
                "copyright": "© 2023 Yuanqing Xie. Alle Rechte vorbehalten.",
                "loading_model": "3D-Modell wird geladen...",
                "model_error": "3D-Modell konnte nicht geladen werden",
                "try_again": "Erneut versuchen",
                "about_me": "Über mich",
                "email": "E-Mail",
                "phone": "Telefon",
                "location": "Standort"
            },
            zh: {
                "home": "首页",
                "projects": "项目",
                "about": "关于",
                "contact": "联系",
                "privacy": "隐私政策",
                "send_email": "发送邮件",
                "copyright": "© 2023 谢原卿。保留所有权利。",
                "loading_model": "加载3D模型中...",
                "model_error": "加载3D模型失败",
                "try_again": "重试",
                "about_me": "关于我",
                "email": "邮箱",
                "phone": "电话",
                "location": "位置"
            }
        };

        // 初始化语言切换功能
        function setupLanguageToggle() {
            const languageToggle = document.getElementById('language-toggle');
            const languageOptions = document.querySelectorAll('.language-option');
            const mobileMenuLinks = document.querySelectorAll('.mobile-menu a');
            const navLinks = document.querySelectorAll('.nav-links a:not(.language-btn)');
            
            // 从localStorage或浏览器设置获取首选语言
            let currentLang = localStorage.getItem('preferredLang') || 
                             navigator.language.split('-')[0] || 
                             'en';
            
            // 确保我们支持这种语言
            if (!translations[currentLang]) {
                currentLang = 'en';
            }
            
            // 初始化页面语言
            changeLanguage(currentLang);
            
            // 设置语言选项点击事件
            if (languageOptions.length > 0) {
                languageOptions.forEach(option => {
                    option.addEventListener('click', function() {
                        const lang = this.getAttribute('data-lang');
                        changeLanguage(lang);
                        
                        // 更新按钮文本
                        const languageBtn = languageToggle.querySelector('.language-btn');
                        if (languageBtn) {
                            languageBtn.innerHTML = `<i class="fas fa-globe"></i> ${lang.toUpperCase()}`;
                        }
                        
                        // 更新选项激活状态
                        languageOptions.forEach(opt => {
                            opt.classList.remove('active');
                        });
                        this.classList.add('active');
                    });
                    
                    // 设置初始激活状态
                    if (option.getAttribute('data-lang') === currentLang) {
                        option.classList.add('active');
                    }
                });
            }
            
            // 更新导航链接的文本
            function updateNavLinks(lang) {
                const translation = translations[lang];
                if (!translation) return;
                
                navLinks.forEach(link => {
                    const key = link.getAttribute('href').replace('#', '');
                    if (translation[key]) {
                        link.textContent = translation[key];
                    }
                });
                
                mobileMenuLinks.forEach(link => {
                    const key = link.getAttribute('href').replace('#', '');
                    if (translation[key]) {
                        link.textContent = translation[key];
                    }
                });
            }
            
            // 切换语言函数
            function changeLanguage(lang) {
                if (!translations[lang]) return;
                
                // 保存语言偏好
                localStorage.setItem('preferredLang', lang);
                
                // 更新语言属性
                document.documentElement.lang = lang;
                
                // 隐藏所有语言内容
                document.querySelectorAll('[lang]').forEach(element => {
                    element.classList.remove('active');
                });
                
                // 显示当前语言内容
                document.querySelectorAll(`[lang="${lang}"]`).forEach(element => {
                    element.classList.add('active');
                });
                
                // 更新翻译文本
                updateTextContent(lang);
                updateNavLinks(lang);
                
                // 更新按钮文本
                const languageBtn = document.querySelector('.language-btn');
                if (languageBtn) {
                    languageBtn.innerHTML = `<i class="fas fa-globe"></i> ${lang.toUpperCase()}`;
                }
            }
            
            // 更新页面上的文本内容
            function updateTextContent(lang) {
                const translation = translations[lang];
                if (!translation) return;
                
                // 更新具有data-i18n属性的元素
                document.querySelectorAll('[data-i18n]').forEach(element => {
                    const key = element.getAttribute('data-i18n');
                    if (translation[key]) {
                        element.textContent = translation[key];
                    }
                });
                
                // 更新按钮文本
                const sendEmailBtn = document.querySelector('.btn-primary');
                if (sendEmailBtn && translation['send_email']) {
                    sendEmailBtn.innerHTML = `<i class="fas fa-paper-plane"></i> ${translation['send_email']}`;
                }
                
                // 更新版权信息
                const copyright = document.querySelector('.copyright');
                if (copyright && translation['copyright']) {
                    copyright.textContent = translation['copyright'];
                }
                
                // 更新3D查看器文本（如果存在）
                const loadingDivs = document.querySelectorAll('.model-loading');
                if (loadingDivs && translation['loading_model']) {
                    loadingDivs.forEach(div => {
                        div.querySelector('p').textContent = translation['loading_model'];
                    });
                }
                
                const errorDivs = document.querySelectorAll('.model-error');
                if (errorDivs) {
                    errorDivs.forEach(div => {
                        if (translation['model_error']) {
                            div.querySelector('p').textContent = translation['model_error'];
                        }
                        if (translation['try_again']) {
                            div.querySelector('button').innerHTML = `<i class="fas fa-sync-alt"></i> ${translation['try_again']}`;
                        }
                    });
                }
            }
        }

        // 通用3D模型查看器初始化
        function initModelViewer(containerId, modelPath, autoRotate = true) {
            const container = document.getElementById(containerId);
            if (!container) {
                console.error(`3D viewer container ${containerId} not found`);
                return;
            }

            const loadingDiv = container.querySelector('.model-loading');
            
            try {
                // 检查必需的Three.js组件
                if (typeof THREE === 'undefined') {
                    throw new Error('Three.js not loaded');
                }
                if (typeof THREE.GLTFLoader === 'undefined') {
                    throw new Error('GLTFLoader not available');
                }
                if (typeof THREE.OrbitControls === 'undefined') {
                    throw new Error('OrbitControls not available');
                }

                // 创建场景
                const scene = new THREE.Scene();
                scene.background = new THREE.Color(0x1a1a1a);
                
                // 设置相机
                const camera = new THREE.PerspectiveCamera(
                    75, 
                    container.clientWidth / container.clientHeight, 
                    0.1, 
                    1000
                );
                camera.position.z = 2;
                
                // 设置渲染器
                const renderer = new THREE.WebGLRenderer({ 
                    antialias: true,
                    alpha: true
                });
                renderer.setSize(container.clientWidth, container.clientHeight);
                renderer.setPixelRatio(window.devicePixelRatio);
                renderer.outputEncoding = THREE.sRGBEncoding;
                renderer.toneMapping = THREE.ACESFilmicToneMapping;
                renderer.toneMappingExposure = 1.2; // 增加曝光度
                
                // 清空容器并添加渲染器
                container.innerHTML = '';
                container.appendChild(renderer.domElement);
                
                // 添加更亮的灯光
                const ambientLight = new THREE.AmbientLight(0xffffff, 1.2); // 增加强度
                scene.add(ambientLight);
                
                const directionalLight1 = new THREE.DirectionalLight(0xffffff, 1.0); // 增加强度
                directionalLight1.position.set(1, 1, 1);
                scene.add(directionalLight1);
                
                const directionalLight2 = new THREE.DirectionalLight(0xffffff, 0.8); // 增加强度
                directionalLight2.position.set(-1, -1, -1);
                scene.add(directionalLight2);
                
                // 添加填充光
                const fillLight = new THREE.DirectionalLight(0xffffff, 0.6);
                fillLight.position.set(0, 1, 0);
                scene.add(fillLight);
                
                // 加载模型
                loadModel(containerId, scene, camera, renderer, container, loadingDiv, modelPath, autoRotate);
                
                // 处理窗口大小变化
                function handleResize() {
                    camera.aspect = container.clientWidth / container.clientHeight;
                    camera.updateProjectionMatrix();
                    renderer.setSize(container.clientWidth, container.clientHeight);
                }
                window.addEventListener('resize', handleResize);

            } catch (error) {
                console.error('3D viewer initialization error:', error);
                showModelError(container, error);
            }
        }

        function loadModel(containerId, scene, camera, renderer, container, loadingDiv, modelPath, autoRotate) {
            try {
                // 初始化带有Draco支持的加载器
                const loader = new THREE.GLTFLoader();
                
                // 设置Draco解码器
                if (typeof THREE.DRACOLoader !== 'undefined') {
                    const dracoLoader = new THREE.DRACOLoader();
                    dracoLoader.setDecoderPath('https://www.gstatic.com/draco/v1/decoders/');
                    loader.setDRACOLoader(dracoLoader);
                } else {
                    console.warn('DRACOLoader not available - model may not load correctly');
                }

                // 加载模型
                loader.load(
                    modelPath,
                    function(gltf) {
                        const model = gltf.scene;
                        scene.add(model);
                        
                        // 如果需要启用阴影
                        model.traverse(function(child) {
                            if (child.isMesh) {
                                child.castShadow = true;
                                child.receiveShadow = true;
                                // 增加材质亮度
                                if (child.material) {
                                    child.material.emissiveIntensity = 0.2;
                                    child.material.needsUpdate = true;
                                }
                            }
                        });
                        
                        // 居中并缩放模型
                        const box = new THREE.Box3().setFromObject(model);
                        const center = box.getCenter(new THREE.Vector3());
                        model.position.sub(center);
                        
                        const size = box.getSize(new THREE.Vector3());
                        const maxDim = Math.max(size.x, size.y, size.z);
                        const scale = 1.5 / maxDim;
                        model.scale.set(scale, scale, scale);
                        
                        console.log('3D model loaded successfully');
                        
                        // 模型加载后添加控制
                        const controls = new THREE.OrbitControls(camera, renderer.domElement);
                        controls.enableDamping = true;
                        controls.dampingFactor = 0.25;
                        controls.autoRotate = autoRotate;
                        controls.autoRotateSpeed = 1.0;
                        
                        // 动画循环
                        function animate() {
                            requestAnimationFrame(animate);
                            controls.update();
                            renderer.render(scene, camera);
                        }
                        animate();
                        
                        // 移除加载指示器
                        if (loadingDiv) {
                            loadingDiv.style.opacity = '0';
                            setTimeout(() => {
                                loadingDiv.remove();
                            }, 300);
                        }
                    },
                    function(xhr) {
                        // 进度回调
                        const percent = (xhr.loaded / xhr.total * 100).toFixed(0);
                        if (loadingDiv) {
                            loadingDiv.innerHTML = `
                                <div>
                                    <i class="fas fa-spinner fa-spin"></i>
                                    <p>${document.querySelector('[data-i18n="loading_model"]').textContent} ${percent}%</p>
                                </div>
                            `;
                        }
                    },
                    function(error) {
                        console.error('Error loading model:', error);
                        showModelError(container, error);
                    }
                );
            } catch (error) {
                console.error('Error in model loading:', error);
                showModelError(container, error);
            }
        }

        function showModelError(container, error) {
            const currentLang = document.documentElement.lang || 'en';
            const tryAgainText = translations[currentLang]?.try_again || 'Try Again';
            const modelErrorText = translations[currentLang]?.model_error || 'Failed to load 3D model';
            
            container.innerHTML = `
                <div class="model-error">
                    <i class="fas fa-exclamation-triangle"></i>
                    <p>${modelErrorText}</p>
                    <small>${error.message || 'Unknown error'}</small>
                    <button onclick="window.location.reload()">
                        <i class="fas fa-sync-alt"></i> ${tryAgainText}
                    </button>
                </div>
            `;
        }

        // Mobile Menu Toggle
        function setupMobileMenu() {
            const mobileMenuBtn = document.getElementById('mobile-menu-btn');
            const mobileMenu = document.getElementById('mobile-menu');
            
            if (mobileMenuBtn && mobileMenu) {
                mobileMenuBtn.addEventListener('click', function() {
                    mobileMenu.classList.toggle('show');
                    this.innerHTML = mobileMenu.classList.contains('show') ? 
                        '<i class="fas fa-times"></i>' : '<i class="fas fa-bars"></i>';
                });
            }
        }

        // Smooth Scrolling
        function setupSmoothScrolling() {
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    // 如果移动菜单打开则关闭它
                    const mobileMenu = document.getElementById('mobile-menu');
                    const mobileMenuBtn = document.getElementById('mobile-menu-btn');
                    if (mobileMenu && mobileMenu.classList.contains('s
